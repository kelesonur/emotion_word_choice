#read the first data frame
df1 <- read_excel("culture_df.xlsx") %>% drop_na()
setwd("~/GitHub/emotion_word_choice/data_and_code")
#read the first data frame
df1 <- read_excel("culture_df.xlsx") %>% drop_na()
# setting up libraries
library(dplyr)
library(magrittr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
library(extrafont)
font_import(pattern = "Times New Roman", prompt = F)
loadfonts()
library(readxl)
library(gdata)
library(stringr)
library(brms)
library(bayesplot)
library(tidybayes)
bayesplot_theme_set(new = theme_bw())
library(modelr)
library(MASS)
#read the first data frame
df1 <- read_excel("culture_df.xlsx") %>% drop_na()
df1$Culture %<>% dplyr::recode('1' = "German", '2' = "Turkish", '3' = "Japanese")
df_nomix <- df1 %>% subset(Dyad != "Conflict") %>% subset(Emotion1_GALC %in% c("Happiness", "Anger", "Disappointment", "Anxiety", "Shame", "Feelinglove", "Guilt", "Pride", "Sadness", "Gratitude", "Positive", "Contentment"))
# encode vector types
df_nomix$Subject %<>% as.integer()
df_nomix$Culture %<>%  as.factor() %>%  reorder.factor(new.order = c("Turkish","German", "Japanese"))
df_nomix$Question %<>% as.factor()
df_nomix$Dyad %<>% as.factor()
df_nomix$Emotion1_GALC %<>% as.factor()
df_nomix$Arousal_ANEW %<>%  as.factor() %>% reorder.factor(new.order = c("Low","High"))
df_nomix$Dominance_ANEW %<>% as.factor() %>% reorder.factor(new.order = c("High","Low"))
df_nomix %>%
group_by(Culture) %>%
dplyr::summarize(prop = mean(Arousal_ANEW == "High"))
# set contrasts for the model
contrasts(df_nomix$Culture) <- contr.sum(3)
contrasts(df_nomix$Dominance_ANEW) <- contr.sum(2)
contrasts(df_nomix$Arousal_ANEW) <- contr.sum(2)
# model for Dominance
df_nomix$Arousal_ANEW %<>%  as.factor() %>% reorder.factor(new.order = c("High","Low"))
df_nomix$Baskinlik %<>% as.factor() %>% reorder.factor(new.order = c("Low","High"))
culturem2 <- brm(Dominance_ANEW  ~ Culture,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
# creating a df for the model results with the mcmc_intervals_data function. I included only the predictor estimate.
dfculture_m2 <- mcmc_intervals_data(culturem2, pars = vars(starts_with("b_"))) %>% subset(parameter != "b_Intercept")
# recoding the predictor estimate.
dfculture_m2$parameter %<>% dplyr::recode(Culture1 = "Türk vs. Japon",
Culture2  = "Alman vs. Japon")
dfculture_m2$parameter %<>% reorder.factor(new.order = c("Alman vs. Japon", "Türk vs. Japon"))
# plotting the model plot with credible intervals, and a dashed vertical line at the intercept (0).
p5 <- dfculture_m2 %>% ggplot(aes(m, parameter)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = l, xmax = h), alpha = 1, height = 0, size = 2) +
geom_errorbarh(aes(xmin = ll, xmax = hh, height = 0)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 1, colour = "black") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 1)) +
xlab("Tahmin (log)") + ylab("Katsayılar") +
theme(text=element_text(size=15))
ggsave("p5_dok.png", plot = p5, width = 6, height = 6)
p5
dfculture_m2
culturem2
# creating a df for the model results with the mcmc_intervals_data function. I included only the predictor estimate.
dfculture_m2 <- mcmc_intervals_data(culturem2, pars = vars(starts_with("b_"))) %>% subset(parameter != "b_Intercept")
dfculture_m2
# recoding the predictor estimate.
dfculture_m2$parameter %<>% dplyr::recode(b_Culture1 = "Türk vs. Japon",
b_Culture2  = "Alman vs. Japon")
dfculture_m2$parameter %<>% reorder.factor(new.order = c("Alman vs. Japon", "Türk vs. Japon"))
# plotting the model plot with credible intervals, and a dashed vertical line at the intercept (0).
p5 <- dfculture_m2 %>% ggplot(aes(m, parameter)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = l, xmax = h), alpha = 1, height = 0, size = 2) +
geom_errorbarh(aes(xmin = ll, xmax = hh, height = 0)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 1, colour = "black") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 1)) +
xlab("Tahmin (log)") + ylab("Katsayılar") +
theme(text=element_text(size=15))
ggsave("p5_dok.png", plot = p5, width = 6, height = 6)
# setting up libraries
library(dplyr)
library(magrittr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
library(extrafont)
font_import(pattern = "Times New Roman", prompt = F)
loadfonts()
library(readxl)
library(gdata)
library(stringr)
library(brms)
library(bayesplot)
library(tidybayes)
bayesplot_theme_set(new = theme_bw())
library(modelr)
library(MASS)
setwd("~/GitHub/emotion_word_choice/data_and_code")
#read the first data frame
df1 <- read_excel("culture_df.xlsx") %>% drop_na()
df1$Culture %<>% dplyr::recode('1' = "German", '2' = "Turkish", '3' = "Japanese")
df_nomix <- df1 %>% subset(Dyad != "Conflict") %>% subset(Emotion1_GALC %in% c("Happiness", "Anger", "Disappointment", "Anxiety", "Shame", "Feelinglove", "Guilt", "Pride", "Sadness", "Gratitude", "Positive", "Contentment"))
# encode vector types
df_nomix$Subject %<>% as.integer()
df_nomix$Culture %<>%  as.factor() %>%  reorder.factor(new.order = c("Turkish","German", "Japanese"))
df_nomix$Question %<>% as.factor()
df_nomix$Dyad %<>% as.factor()
df_nomix$Emotion1_GALC %<>% as.factor()
df_nomix$Arousal_ANEW %<>%  as.factor() %>% reorder.factor(new.order = c("Low","High"))
df_nomix$Dominance_ANEW %<>% as.factor() %>% reorder.factor(new.order = c("High","Low"))
# set contrasts for the model
contrasts(df_nomix$Culture) <- contr.sum(3)
contrasts(df_nomix$Dominance_ANEW) <- contr.sum(2)
contrasts(df_nomix$Arousal_ANEW) <- contr.sum(2)
# model for Dominance
df_nomix$Arousal_ANEW %<>%  as.factor() %>% reorder.factor(new.order = c("High","Low"))
df_nomix$Baskinlik %<>% as.factor() %>% reorder.factor(new.order = c("Low","High"))
culturem2 <- brm(Dominance_ANEW  ~ Culture,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
culturem2 <- brm(Dominance_ANEW  ~ Culture,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
culturem2
# set contrasts for the model
contrasts(df_nomix$Culture)
#read the first data frame
df1 <- read_excel("culture_df.xlsx") %>% drop_na()
df1$Culture %<>% dplyr::recode('1' = "German", '2' = "Turkish", '3' = "Japanese")
df_nomix <- df1 %>% subset(Dyad != "Conflict") %>% subset(Emotion1_GALC %in% c("Happiness", "Anger", "Disappointment", "Anxiety", "Shame", "Feelinglove", "Guilt", "Pride", "Sadness", "Gratitude", "Positive", "Contentment"))
# encode vector types
df_nomix$Subject %<>% as.integer()
df_nomix$Culture %<>%  as.factor() %>%  reorder.factor(new.order = c("Turkish","German", "Japanese"))
df_nomix$Question %<>% as.factor()
df_nomix$Dyad %<>% as.factor()
df_nomix$Emotion1_GALC %<>% as.factor()
df_nomix$Arousal_ANEW %<>%  as.factor() %>% reorder.factor(new.order = c("Low","High"))
df_nomix$Dominance_ANEW %<>% as.factor() %>% reorder.factor(new.order = c("High","Low"))
df_nomix %>%
group_by(Culture) %>%
dplyr::summarize(prop = mean(Arousal_ANEW == "High"))
# set contrasts for the model
contrasts(df_nomix$Culture) <- contr.sum(3)
contrasts(df_nomix$Dominance_ANEW) <- contr.sum(2)
contrasts(df_nomix$Arousal_ANEW) <- contr.sum(2)
contrasts(df_nomix$Dominance_ANEW)
contrasts(df_nomix$Arousal_ANEW)
# model for Arousal
culturem1 <- brm(Arousal_ANEW ~ Culture + Dominance_ANEW,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
culturem1
culturem2 <- brm(Dominance_ANEW  ~ Culture,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
culturem2
# model for Dominance
df_nomix$Dominance_ANEW %<>% as.factor() %>% reorder.factor(new.order = c("Low","High"))
culturem2 <- brm(Dominance_ANEW  ~ Culture,
family = bernoulli(link = "logit"), data = df_nomix,
chains = 4, cores = 4)
culturem2
# creating a df for the model results with the mcmc_intervals_data function. I included only the predictor estimate.
dfculture_m2 <- mcmc_intervals_data(culturem2, pars = vars(starts_with("b_"))) %>% subset(parameter != "b_Intercept")
# recoding the predictor estimate.
dfculture_m2$parameter %<>% dplyr::recode(b_Culture1 = "Türk vs. Japon",
b_Culture2  = "Alman vs. Japon")
dfculture_m2$parameter %<>% reorder.factor(new.order = c("German vs. Japanese", "Turkish vs. Japanese"))
# plotting the model plot with credible intervals, and a dashed vertical line at the intercept (0).
p5 <- dfculture_m2 %>% ggplot(aes(m, parameter)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = l, xmax = h), alpha = 1, height = 0, size = 2) +
geom_errorbarh(aes(xmin = ll, xmax = hh, height = 0)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 1, colour = "black") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 1)) +
xlab("Estimate (log)") + ylab("Coefficient") +
theme(text=element_text(size=15))
p5
dfculture_m2
culturem2
# creating a df for the model results with the mcmc_intervals_data function. I included only the predictor estimate.
dfculture_m2 <- mcmc_intervals_data(culturem2, pars = vars(starts_with("b_"))) %>% subset(parameter != "b_Intercept")
dfculture_m2
# recoding the predictor estimate.
dfculture_m2$parameter %<>% dplyr::recode(b_Culture1 = "Türk vs. Japon",
b_Culture2  = "Alman vs. Japon")
dfculture_m2
dfculture_m2$parameter %<>% reorder.factor(new.order = c("Alman vs. Japon", "Türk vs. Japon"))
# plotting the model plot with credible intervals, and a dashed vertical line at the intercept (0).
p5 <- dfculture_m2 %>% ggplot(aes(m, parameter)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = l, xmax = h), alpha = 1, height = 0, size = 2) +
geom_errorbarh(aes(xmin = ll, xmax = hh, height = 0)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 1, colour = "black") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 1)) +
xlab("Estimate (log)") + ylab("Coefficient") +
theme(text=element_text(size=15))
p5
ggsave("p5_dok.png", plot = p5, width = 6, height = 6)
# plotting the model plot with credible intervals, and a dashed vertical line at the intercept (0).
p5 <- dfculture_m2 %>% ggplot(aes(m, parameter)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = l, xmax = h), alpha = 1, height = 0, size = 2) +
geom_errorbarh(aes(xmin = ll, xmax = hh, height = 0)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 1, colour = "black") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 1)) +
xlab("Tahmin (log)") + ylab("Katsayılar") +
theme(text=element_text(size=15))
ggsave("p5_dok.png", plot = p5, width = 6, height = 6)
